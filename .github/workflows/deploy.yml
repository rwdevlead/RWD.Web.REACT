name: Test, Scan & Deploy Monorepo to Vercel

on:
  push:
    branches:
      - main
      - feature/** # deploy previews for feature branches
  workflow_dispatch:

jobs:
  vercel_deploy:
    permissions:
      security-events: write
    runs-on: ubuntu-latest
    steps:
      # 1️⃣ Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Setup Node
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      # 3️⃣ Install root dependencies
      - name: Install dependencies
        run: npm install

      # 4️⃣ Run backend tests
      - name: Run workspace tests
        run: npm run test
        working-directory: test/backend

      # 5️⃣ Security scans
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Perform CodeQL Analysi
        uses: github/codeql-action/analyze@v3

      # 6️⃣ Install Vercel CLI
      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      # 7️⃣ Sync secrets (Prod + Preview)
      - name: Sync environment variables to Vercel
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "Syncing Production Secrets ..."
            vercel env rm VITE_RECAPTCHA_SITE_KEY production --yes --token=${{ secrets.VERCEL_TOKEN }} || true
            echo ${{ secrets.VITE_RECAPTCHA_SITE_KEY }} | vercel env add VITE_RECAPTCHA_SITE_KEY production --token=${{ secrets.VERCEL_TOKEN }}

            vercel env rm EMAILJS_ACCESSTOKEN production --yes --token=${{ secrets.VERCEL_TOKEN }} || true
            echo ${{ secrets.EMAILJS_ACCESSTOKEN }} | vercel env add EMAILJS_ACCESSTOKEN production --token=${{ secrets.VERCEL_TOKEN }}

            vercel env rm EMAILJS_PUBLICKEY production --yes --token=${{ secrets.VERCEL_TOKEN }} || true
            echo ${{ secrets.EMAILJS_PUBLICKEY }} | vercel env add EMAILJS_PUBLICKEY production --token=${{ secrets.VERCEL_TOKEN }}

            vercel env rm EMAILJS_SERVICE_ID production --yes --token=${{ secrets.VERCEL_TOKEN }} || true
            echo ${{ secrets.EMAILJS_SERVICE_ID }} | vercel env add EMAILJS_SERVICE_ID production --token=${{ secrets.VERCEL_TOKEN }}

            vercel env rm EMAILJS_TEMPLATE_ID production --yes --token=${{ secrets.VERCEL_TOKEN }} || true
            echo ${{ secrets.EMAILJS_TEMPLATE_ID }} | vercel env add EMAILJS_TEMPLATE_ID production --token=${{ secrets.VERCEL_TOKEN }}

            vercel env rm EMAILJS_URL production --yes --token=${{ secrets.VERCEL_TOKEN }} || true
            echo ${{ vars.EMAILJS_URL }} | vercel env add EMAILJS_URL production --token=${{ secrets.VERCEL_TOKEN }}
          else
            echo "Syncing Preview Secrets ..."
            vercel env rm VITE_RECAPTCHA_SITE_KEY preview --yes --token=${{ secrets.VERCEL_TOKEN }} || true
            echo ${{ secrets.VITE_RECAPTCHA_SITE_KEY }} | vercel env add VITE_RECAPTCHA_SITE_KEY preview --token=${{ secrets.VERCEL_TOKEN }}

            vercel env rm EMAILJS_ACCESSTOKEN preview --yes --token=${{ secrets.VERCEL_TOKEN }} || true
            echo ${{ secrets.EMAILJS_ACCESSTOKEN }} | vercel env add EMAILJS_ACCESSTOKEN preview --token=${{ secrets.VERCEL_TOKEN }}

            vercel env rm EMAILJS_PUBLICKEY preview --yes --token=${{ secrets.VERCEL_TOKEN }} || true
            echo ${{ secrets.EMAILJS_PUBLICKEY }} | vercel env add EMAILJS_PUBLICKEY preview --token=${{ secrets.VERCEL_TOKEN }}

            vercel env rm EMAILJS_SERVICE_ID preview --yes --token=${{ secrets.VERCEL_TOKEN }} || true
            echo ${{ secrets.EMAILJS_SERVICE_ID }} | vercel env add EMAILJS_SERVICE_ID preview --token=${{ secrets.VERCEL_TOKEN }}

            vercel env rm EMAILJS_TEMPLATE_ID preview --yes --token=${{ secrets.VERCEL_TOKEN }} || true
            echo ${{ secrets.EMAILJS_TEMPLATE_ID }} | vercel env add EMAILJS_TEMPLATE_ID preview --token=${{ secrets.VERCEL_TOKEN }}

            vercel env rm EMAILJS_URL preview --yes --token=${{ secrets.VERCEL_TOKEN }} || true
            echo ${{ vars.EMAILJS_URL }} | vercel env add EMAILJS_URL preview --token=${{ secrets.VERCEL_TOKEN }}
          fi

          # # === Production ===
          # vercel env rm VITE_RECAPTCHA_SITE_KEY production --yes --token=${{ secrets.VERCEL_TOKEN }} || true
          # echo ${{ secrets.VITE_RECAPTCHA_SITE_KEY }} | vercel env add VITE_RECAPTCHA_SITE_KEY production --token=${{ secrets.VERCEL_TOKEN }}

          # vercel env rm EMAILJS_ACCESSTOKEN production --yes --token=${{ secrets.VERCEL_TOKEN }} || true
          # echo ${{ secrets.EMAILJS_ACCESSTOKEN }} | vercel env add EMAILJS_ACCESSTOKEN production --token=${{ secrets.VERCEL_TOKEN }}

          # vercel env rm EMAILJS_PUBLICKEY production --yes --token=${{ secrets.VERCEL_TOKEN }} || true
          # echo ${{ secrets.EMAILJS_PUBLICKEY }} | vercel env add EMAILJS_PUBLICKEY production --token=${{ secrets.VERCEL_TOKEN }}

          # vercel env rm EMAILJS_SERVICE_ID production --yes --token=${{ secrets.VERCEL_TOKEN }} || true
          # echo ${{ secrets.EMAILJS_SERVICE_ID }} | vercel env add EMAILJS_SERVICE_ID production --token=${{ secrets.VERCEL_TOKEN }}

          # vercel env rm EMAILJS_TEMPLATE_ID production --yes --token=${{ secrets.VERCEL_TOKEN }} || true
          # echo ${{ secrets.EMAILJS_TEMPLATE_ID }} | vercel env add EMAILJS_TEMPLATE_ID production --token=${{ secrets.VERCEL_TOKEN }}

          # vercel env rm EMAILJS_URL production --yes --token=${{ secrets.VERCEL_TOKEN }} || true
          # echo ${{ vars.EMAILJS_URL }} | vercel env add EMAILJS_URL production --token=${{ secrets.VERCEL_TOKEN }}


          # === Preview ===
          # vercel env rm VITE_RECAPTCHA_SITE_KEY preview --yes --token=${{ secrets.VERCEL_TOKEN }} || true
          # echo ${{ secrets.VITE_RECAPTCHA_SITE_KEY }} | vercel env add VITE_RECAPTCHA_SITE_KEY preview --token=${{ secrets.VERCEL_TOKEN }}

          # vercel env rm EMAILJS_ACCESSTOKEN preview --yes --token=${{ secrets.VERCEL_TOKEN }} || true
          # echo ${{ secrets.EMAILJS_ACCESSTOKEN }} | vercel env add EMAILJS_ACCESSTOKEN preview --token=${{ secrets.VERCEL_TOKEN }}

          # vercel env rm EMAILJS_PUBLICKEY preview --yes --token=${{ secrets.VERCEL_TOKEN }} || true
          # echo ${{ secrets.EMAILJS_PUBLICKEY }} | vercel env add EMAILJS_PUBLICKEY preview --token=${{ secrets.VERCEL_TOKEN }}

          # vercel env rm EMAILJS_SERVICE_ID preview --yes --token=${{ secrets.VERCEL_TOKEN }} || true
          # echo ${{ secrets.EMAILJS_SERVICE_ID }} | vercel env add EMAILJS_SERVICE_ID preview --token=${{ secrets.VERCEL_TOKEN }}

          # vercel env rm EMAILJS_TEMPLATE_ID preview --yes --token=${{ secrets.VERCEL_TOKEN }} || true
          # echo ${{ secrets.EMAILJS_TEMPLATE_ID }} | vercel env add EMAILJS_TEMPLATE_ID preview --token=${{ secrets.VERCEL_TOKEN }}

          # vercel env rm EMAILJS_URL preview --yes --token=${{ secrets.VERCEL_TOKEN }} || true
          # echo ${{ vars.EMAILJS_URL }} | vercel env add EMAILJS_URL preview --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      # 8️⃣ Deploy step
      # - name: Pull Vercel Environment Information
      #   run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      # - name: Build Project Artifacts
      #   run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      # - name: Deploy Project Artifacts to Vercel
      #   run: vercel deploy --prebuilt --target=preview --token=${{ secrets.VERCEL_TOKEN }}
      #   env:
      #     VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      #     VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Deploy to Vercel
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "Deploying to Production..."
            vercel pull --yes --environment=production --token="${{ secrets.VERCEL_TOKEN }}"
            vercel build --prod --token="${{ secrets.VERCEL_TOKEN }}"
            vercel deploy --prebuilt --prod --token="${{ secrets.VERCEL_TOKEN }}"
          else
            echo "Deploying to Preview..."
            vercel pull --yes --environment=preview --token="${{ secrets.VERCEL_TOKEN }}"
            vercel build --token="${{ secrets.VERCEL_TOKEN }}"
            vercel deploy --prebuilt --token="${{ secrets.VERCEL_TOKEN }}"
          fi
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
