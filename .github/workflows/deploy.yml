name: Test, Scan & Deploy Monorepo to Vercel

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test_scan_deploy:
    permissions:
      security-events: write
    runs-on: ubuntu-latest
    steps:
      # 1Ô∏è‚É£ Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Setup Node
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      # 3Ô∏è‚É£ Install root dependencies (if any)
      - name: Install dependencies
        run: npm install #--workspaces

      # 4Ô∏è‚É£ Install backend dependencies
      # - name: Install backend dependencies
      #   run: npm ci
      #   working-directory: backend

      # 5Ô∏è‚É£ Install frontend dependencies
      # - name: Install frontend dependencies
      #   run: npm ci
      #   working-directory: frontend

      # 6Ô∏è‚É£ Run backend tests
      #- name: Install root devDependencies
      #  run: npm install
      - name: Run workspace tests
        run: npm run test
        working-directory: test/backend # or frontend

      # 7Ô∏è‚É£ Run frontend tests (commented out for now)
      # - name: Run frontend tests
      #   run: npx vitest run test/frontend
      #   working-directory: ./RWD.Web.REACT
      #   env:
      #     RECAPTCHA_SECRET_KEY: ${{ secrets.RECAPTCHA_SECRET_KEY }}
      #     API_URL: ${{ secrets.API_URL }}

      # 8Ô∏è‚É£ Security scan
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      # 9Ô∏è‚É£ Install Vercel CLI
      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      # üîü Sync secrets to Vercel (Development env)
      - name: Verify VERCEL_TOKEN is set
        run: |
          if [ -z "$VERCEL_TOKEN" ]; then
            echo "‚ùå VERCEL_TOKEN is not set"
            exit 1
          else
            echo "‚úÖ VERCEL_TOKEN is set"
          fi
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Test Vercel Token Authentication
        run: vercel whoami --token ${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    
      - name: Sync environment variables to Vercel
        run: |
          # vercel env rm TEST_KEY --yes --token ${{ secrets.VERCEL_TOKEN }}
          vercel env add TEST_KEY --token ${{ secrets.VERCEL_TOKEN }} 
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      # 1Ô∏è‚É£1Ô∏è‚É£ Deploy to Vercel (Production)
      - name: Deploy to Vercel
        run: vercel --preview --confirm --cwd ./frontend
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
